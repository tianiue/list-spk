name: Build OpenList Synology Package

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: '版本号 (例如: 1.0.0)'
        required: true
        default: '1.0.0'
      isPreRelease:
        description: '是否为预发布版本'
        required: true
        type: boolean
        default: false

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, armv7, armv8]
    
    steps:
      - name: Checkout 代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 设置版本号
        id: version
        run: |
          echo "VERSION=${{ github.event.inputs.releaseVersion }}" >> $GITHUB_OUTPUT
          
      - name: 安装构建依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y libarchive-tools python3 python3-pip dos2unix
          pip3 install --upgrade pip
          # 若无需Python依赖，删除下面一行
          # pip3 install -r requirements.txt
          
      - name: 准备构建环境
        run: |
          mkdir -p build/target
          cp -r src/* build/target/
          cp -r package/* build/

          # 验证关键脚本是否复制成功
          if [ ! -f "build/start-stop-status" ]; then
            echo "错误：start-stop-status文件未复制成功"
            exit 1
          fi
          if [ ! -f "build/postinst" ]; then
            echo "错误：postinst文件未复制成功"
            exit 1
          fi
          if [ ! -f "build/prerm" ]; then
            echo "错误：prerm文件未复制成功"
            exit 1
          fi

          # 动态替换架构和版本（核心修正）
          sed -i "s|{ARCH}|${{ matrix.arch }}|g" build/INFO
          sed -i "s|{VERSION}|${{ steps.version.outputs.VERSION }}|g" build/INFO

          # 转换换行符
          dos2unix build/start-stop-status build/postinst build/prerm
          
      - name: 设置文件权限
        run: |
          cd build
          chmod 755 start-stop-status postinst prerm
          chmod 644 INFO
          # 容错处理：仅当icons目录存在时设置权限
          if [ -d "icons" ]; then
            chmod 644 icons/*
          fi
          chmod 644 target/*
          
      - name: 构建SPK包
        run: |
          cd build
          tar --format=gnu --owner=0 --group=0 --numeric-owner -cvf ../openlist-synology-${{ steps.version.outputs.VERSION }}-${{ matrix.arch }}.spk ./*
          
      - name: 验证SPK包结构
        run: |
          SPK_FILE="openlist-synology-${{ steps.version.outputs.VERSION }}-${{ matrix.arch }}.spk"
          if ! tar -tf $SPK_FILE | grep -q "INFO"; then
            echo "错误：SPK缺少INFO文件"
            exit 1
          fi
          if ! tar -tf $SPK_FILE | grep -q "start-stop-status"; then
            echo "错误：SPK缺少服务脚本"
            exit 1
          fi
          mkdir -p temp_spk
          tar -xf $SPK_FILE -C temp_spk
          if [ $(stat -c "%a" temp_spk/start-stop-status) -ne 755 ]; then
            echo "错误：start-stop-status权限不正确"
            exit 1
          fi
          
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: openlist-synology-${{ steps.version.outputs.VERSION }}-${{ matrix.arch }}
          path: openlist-synology-${{ steps.version.outputs.VERSION }}-${{ matrix.arch }}.spk

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout 代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: 设置版本号
        id: version
        run: |
          echo "VERSION=${{ github.event.inputs.releaseVersion }}" >> $GITHUB_OUTPUT
          echo "TAG=v${{ github.event.inputs.releaseVersion }}" >> $GITHUB_OUTPUT
          
      - name: 整理发布文件
        run: |
          mkdir -p release
          find artifacts -name "*.spk" -exec cp {} release/ \;
          
      - name: 生成发布说明
        run: |
          echo "## OpenList 群晖客户端 ${{ steps.version.outputs.VERSION }}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### 本次更新内容" >> RELEASE_NOTES.md
          echo "- 修复群晖7.2.2安装格式问题" >> RELEASE_NOTES.md
          echo "- 优化SPK打包规范" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### 支持的架构" >> RELEASE_NOTES.md
          echo "- x86_64" >> RELEASE_NOTES.md
          echo "- armv7" >> RELEASE_NOTES.md
          echo "- armv8" >> RELEASE_NOTES.md
          
      - name: 创建并推送Git标签
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag ${{ steps.version.outputs.TAG }}
          git push origin ${{ steps.version.outputs.TAG }}
          
      - name: 创建GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.TAG }}
          name: OpenList 群晖客户端 v${{ steps.version.outputs.VERSION }}
          body_path: RELEASE_NOTES.md
          files: release/*.spk
          draft: false
          prerelease: ${{ github.event.inputs.isPreRelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
